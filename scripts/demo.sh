#!/bin/bash

# Demo script showing how to use the cost control template
# This demonstrates the connection process for different project types

echo "🎬 AWS Cost Control Template - Demo"
echo "=================================="
echo ""

# Example 1: CDK Project
echo "📁 Example 1: Connecting a CDK Project"
echo "--------------------------------------"
echo "$ cd my-existing-cdk-project"
echo "$ ls"
echo "bin/  lib/  cdk.json  package.json  README.md"
echo ""
echo "$ npx @aws-cost-control/template"
echo "🔗 AWS Cost Control Template - Project Connection"
echo "=================================================="
echo ""
echo "🔍 Step 1: Analyzing existing project..."
echo "   Detected project type: cdk-typescript"
echo "   Infrastructure: aws-cdk"
echo "   Found 4 existing resource patterns"
echo "   ✅ Project analysis complete"
echo ""
echo "⚙️  Step 2: Gathering configuration..."
echo "   Project Name: my-serverless-app"
echo "   Environment: dev"
echo "   Default Budget: $150/month"
echo "   ✅ Configuration gathered"
echo ""
echo "💉 Step 3: Injecting cost controls..."
echo "   Copied 5 cost control modules"
echo "   Created deployment wrapper script"
echo "   ✅ Cost controls injected"
echo ""
echo "📋 Step 4: Setting up deployment scripts..."
echo "   Updated package.json with cost control scripts"
echo "   Created quick cost check script"
echo "   ✅ Deployment scripts configured"
echo ""
echo "📝 Step 5: Creating configuration files..."
echo "   ✅ Configuration files created"
echo ""
echo "📦 Step 6: Installing dependencies..."
echo "   Installing aws-sdk..."
echo "   ✅ Dependencies ready"
echo ""
echo "🎉 Cost controls successfully connected!"
echo ""
echo "📋 Next Steps:"
echo "1. Review cost-controls-config.json"
echo "2. Run: npm run deploy-with-cost-controls"
echo "3. Monitor your CloudWatch dashboard"
echo ""
echo "✅ Your existing code remains unchanged!"
echo ""
echo "----------------------------------------"
echo ""

# Example 2: Deploy with cost controls
echo "📁 Example 2: Deploying with Cost Controls"
echo "------------------------------------------"
echo "$ npm run deploy-with-cost-controls"
echo "🛡️  Starting cost-controlled deployment..."
echo ""
echo "🔍 Pre-deployment cost validation..."
echo "📋 Synthesizing CDK template..."
echo "✅ Estimated cost: $47.20/month"
echo "✅ Within budget: $150/month"
echo ""
echo "🏗️  Deploying cost control infrastructure..."
echo "🚀 Deploying application with cost controls..."
echo "⚙️  Configuring post-deployment cost controls..."
echo "🏷️  Tagging resources for cost tracking..."
echo "📊 Setting up cost monitoring dashboard..."
echo ""
echo "🎉 Deployment completed successfully with cost controls!"
echo ""
echo "📊 Monitor your costs at:"
echo "   https://console.aws.amazon.com/cloudwatch/home#dashboards:name=cost-control-my-serverless-app-dev"
echo ""
echo "----------------------------------------"
echo ""

# Example 3: Cost validation failure
echo "📁 Example 3: Cost Validation Failure"
echo "-------------------------------------"
echo "$ npm run deploy-with-cost-controls"
echo "🛡️  Starting cost-controlled deployment..."
echo ""
echo "🔍 Pre-deployment cost validation..."
echo "⚠️  Estimated cost: $287.50/month (exceeds $150 budget)"
echo ""
echo "❌ Pre-deployment validation failed:"
echo "   • Instance type 't3.large' not allowed in dev environment. Use: t3.micro, t3.small"
echo "   • EBS volume size 500GB exceeds dev limit of 100GB"
echo "   • Estimated cost ($287.50) exceeds budget ($150)"
echo ""
echo "💡 Recommendations:"
echo "   • Use t3.small instead of t3.large"
echo "   • Reduce EBS volume size to 100GB or less"
echo "   • Consider auto-shutdown for development resources"
echo ""
echo "❓ Continue anyway? [y/N] n"
echo "Deployment cancelled for cost compliance."
echo ""
echo "----------------------------------------"
echo ""

# Example 4: Quick cost check
echo "📁 Example 4: Quick Cost Monitoring"
echo "-----------------------------------"
echo "$ ./quick-cost-check.sh"
echo "💰 Quick Cost Check"
echo "=================="
echo "Current spending: $23.47"
echo "Budget: $150/month"
echo ""
echo "📊 Full dashboard:"
echo "https://console.aws.amazon.com/cloudwatch/home#dashboards:name=cost-control-my-serverless-app-dev"
echo ""
echo "$ npm run cost-report"
echo "📊 Weekly Cost Report"
echo "===================="
echo "Project: my-serverless-app"
echo "Environment: dev"
echo "Period: Last 7 days"
echo ""
echo "💰 Cost Summary:"
echo "├── Total Spent: $23.47"
echo "├── Budget Used: 15.6% of $150"
echo "├── Daily Average: $3.35"
echo "└── Projected Monthly: $101.50"
echo ""
echo "🏆 Top Resources by Cost:"
echo "1. Lambda Functions: $12.30 (52%)"
echo "2. API Gateway: $6.45 (27%)"
echo "3. CloudWatch Logs: $2.89 (12%)"
echo "4. DynamoDB: $1.83 (8%)"
echo ""
echo "💡 Optimization Recommendations:"
echo "• Enable Lambda provisioned concurrency optimization"
echo "• Review CloudWatch log retention policies"
echo "• Consider DynamoDB on-demand pricing"
echo ""
echo "----------------------------------------"
echo ""

echo "✨ That's how easy it is to add cost controls to any AWS project!"
echo ""
echo "🚀 Ready to protect your AWS costs?"
echo "   npx @aws-cost-control/template"
echo ""
echo "📚 Full documentation:"
echo "   https://github.com/your-org/aws-cost-control-template"